<!DOCTYPE html>
<html>
<style>
* {
  margin: 0;
  padding: 0;
}

table {
  border: 1px solid #ccc;
  border-width: 1px 1px 0 0;
}

table td,
table th {
  border: 1px solid #ccc;
  border-width: 0 0 1px 1px;
  padding: 4px;
}

.highlight {
  background-color: #ccc;
}
</style>

<body>
  <SCRIPT TYPE="text/javascript" LANGUAGE="JavaScript" SRC="diff_match_patch_uncompressed.js"></SCRIPT>
<h1>XML to Table</h1>

<button type="button" onclick="loadDoc(),loadDoc2() ">Convert XML</button>
<button onclick="exportTableToCSV('download.csv')">Download CSV</button>
<button onclick="CompareTables(demo, demo2)">Compare</button>

<br><br>
<table>
<td valign=top><table border=2 id="demo"> <h2><font color="blue">XML file 1 </font></h2> </table></td>
<td valign=top><table border=2 id="demo2"> <h2><font color="blue">XML file 2 </font></h2></table></td>
</table>

<script>
function loadDoc() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      myFunction(this);
    }
  };
  xhttp.open("GET", "OMDW-06.16.xml", true);
  xhttp.send();
}
function myFunction(xml) {
  var i;
  var xmlDoc = xml.responseXML;
  var table="<tr><th>VERSION</th><th>STATE</th><th>ID</th><th>TYPE</th><th>NAME</th></tr>";
  var x = xmlDoc.getElementsByTagName("EntityObject");
	for (i = 0; i <x.length; i++) { 
		table += "<tr><td>" +
	//	x[i].getElementsByTagName("EntityType")[0].childNodes[0].nodeValue +
	//	"</td><td>" +
	//	x[i].getElementsByTagName("Operation")[0].childNodes[0].nodeValue +
	//	"</td><td>" +
		x[i].getElementsByTagName("VERSION")[0].childNodes[0].nodeValue +
		"</td><td>" +		
		x[i].getElementsByTagName("STATE")[0].childNodes[0].nodeValue +
		"</td><td>" +
		x[i].getElementsByTagName("ID")[0].childNodes[0].nodeValue +
		"</td><td>" +
		x[i].getElementsByTagName("TYPE")[0].childNodes[0].nodeValue +
		"</td><td>" +
		x[i].getElementsByTagName("NAME")[0].childNodes[0].nodeValue +
		"</td></tr>";
  }	
  
  document.getElementById("demo").innerHTML = table;
}

//-----------------------------2nd XML file----
function loadDoc2() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      myFunction2(this);
    }
  };
  xhttp.open("GET", "OMDW-06.15.xml", true);
  xhttp.send();
}
function myFunction2(xml) {
  var i;
  var xmlDoc = xml.responseXML;
  var table2="<tr><th>VERSION</th><th>STATE</th><th>ID</th><th>TYPE</th><th>NAME</th></tr>";
  var x = xmlDoc.getElementsByTagName("EntityObject");
	for (i = 0; i <x.length; i++) { 
		table2 += "<tr><td>" +
	//	x[i].getElementsByTagName("EntityType")[0].childNodes[0].nodeValue +
	//	"</td><td>" +
	//	x[i].getElementsByTagName("Operation")[0].childNodes[0].nodeValue +
	//	"</td><td>" +
		x[i].getElementsByTagName("VERSION")[0].childNodes[0].nodeValue +
		"</td><td>" +		
		x[i].getElementsByTagName("STATE")[0].childNodes[0].nodeValue +
		"</td><td>" +
		x[i].getElementsByTagName("ID")[0].childNodes[0].nodeValue +
		"</td><td>" +
		x[i].getElementsByTagName("TYPE")[0].childNodes[0].nodeValue +
		"</td><td>" +
		x[i].getElementsByTagName("NAME")[0].childNodes[0].nodeValue +
		"</td></tr>";
  }	
  
  document.getElementById("demo2").innerHTML = table2;
}
</script>


<script>
		// Funtions to download CSV
		function downloadCSV(csv, filename)
		{
			var csvFile;
			var downloadLink;

		// CSV file
			csvFile = new Blob([csv], {type: "text/csv"});

		// Download link
			downloadLink = document.createElement("a");

		// File name
			downloadLink.download = filename;

		// Create a link to the file
			downloadLink.href = window.URL.createObjectURL(csvFile);

		// Hide download link
			downloadLink.style.display = "none";

		// Add the link to DOM
			document.body.appendChild(downloadLink);

		// Click download link
			downloadLink.click();
		}

		function exportTableToCSV(filename) {
			var csv = [];
			var rows = document.querySelectorAll("table tr");

			for (var i = 0; i < rows.length; i++) {
			var row = [], cols = rows[i].querySelectorAll("td, th");

			for (var j = 0; j < cols.length; j++)
            row.push(cols[j].innerText);

			csv.push(row.join(","));
		}

    // Download CSV file
    downloadCSV(csv.join("\n"), filename);
}
// End of CSV script
</script>
<script>

// mapping the cells of table 1
function toValues(tHeaders) {
  return Object.keys(tHeaders).map(function(key){ 
      return tHeaders[key].textContent;
  });
}

// comparing the rows of table 1 and table 2
function CompareTables(table1,table2) {

    for(var i=0; i < table1.rows.length; i++){
    var tHeadersValues = toValues(table1.rows[i].cells);
        var rowCells = table1.rows[i].cells;
        var values = toValues(rowCells);

        for(var j=0;j<values.length;j++) {

          // checking for similar column values
          if(table1.rows[i].cells[0].innerHTML == table2.rows[i].cells[0].innerHTML && 
          table1.rows[i].cells[1].innerHTML == table2.rows[i].cells[1].innerHTML &&
          table1.rows[i].cells[2].innerHTML == table2.rows[i].cells[2].innerHTML &&
          table1.rows[i].cells[3].innerHTML == table2.rows[i].cells[3].innerHTML &&
          table1.rows[i].cells[4].innerHTML == table2.rows[i].cells[4].innerHTML) {
                  table1.rows[i].style.backgroundColor = "yellow";
                  instHasChange = true;
          }
        }
    }
    
}


</script>


</body>

</html>
